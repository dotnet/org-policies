# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

trigger:
- master

schedules:
- cron: "0 11 * * 1-5" # 11 AM UTC is 5AM PST
  displayName: Weekday 4am build
  branches:
    include:
    - master
  always: true

pool:
  vmImage: 'windows-latest'

variables:
  buildConfiguration: 'Release'
  sln: '$(Build.Repository.LocalPath)\src\Microsoft.DotnetOrg.Policies.sln'
  outDir: '$(Build.ArtifactStagingDirectory)\'
  policop: '$(Build.ArtifactStagingDirectory)\policop.exe'
  cachePath: '$(Build.ArtifactStagingDirectory)\dotnet.json'
  output: '$(Build.ArtifactStagingDirectory)\dotnet.csv'

jobs:
- job:
  timeoutInMinutes: 120
  steps:
  - task: NuGetToolInstaller@1
  - task: NuGetCommand@2
    inputs:
      restoreSolution: '$(sln)'
  - task: MSBuild@1
    inputs:
      solution: '$(sln)'
      msbuildArguments: '/p:OutDir=$(outDir)'
  - task: CmdLine@2
    inputs:
      script: |
        $(policop) check --org dotnet --policy-repo terrajobst/org-policy-violations -o $(output) --cache-location $(cachePath) --ospo-token $(TokenOspo) --github-token $(GitHubToken)
    condition: and(succeeded(), or(eq(variables['Build.Reason'], 'Schedule'), eq(variables['Build.Reason'], 'Manual')))
  - task: PublishBuildArtifacts@1
    condition: eq(variables['system.pullrequest.isfork'], false)
